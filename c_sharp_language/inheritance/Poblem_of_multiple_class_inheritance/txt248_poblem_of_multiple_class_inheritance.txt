/*this code cannot be compiled because in line 26 The D class inheriting from more than one class
 * and it is not allowed in C#
 */

using System;

class A
{
    public virtual void Print()
    {
        Console.WriteLine("A implementaion");
    }
}
class B : A
{
    public override void Print()
    {
        Console.WriteLine("B Implementation");
    }
}

class C : A
{
    public override void Print()
    {
        Console.WriteLine("C implementation");
    }
}

class D : B, C
{

}
class Program
{
    public static void Main()
    {
        D d = new D();
        d.Print();
    }
}

/*
 * class B and class C is deriving from class A. Bothe of them override the virtual print method which they have inherited from class A 
 *  class D is inheriting from both class B and C but class D didn't override the print method.
 *  
 * Which version of overriden method should d invoke. B class? C class?
 * 
 * This ambiguity is called as diamond problem
 */